# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
    build:
        docker:
            - image: circleci/node:10.15
              environment:
                PORT: 5600
                DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
                CLOUDAMQP_URL: amqp://rabbitmq:rabbitmq@localhost

            - image: circleci/postgres:11-alpine
              environment:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: postgres
                POSTGRES_DB: postgres

    # rabbitmq:
    #     image: rabbitmq:3-management
    #     hostname: 'localhost'
    #     environment:
    #         RABBITMQ_DEFAULT_USER: rabbitmq
    #         RABBITMQ_DEFAULT_PASS: rabbitmq
    #     ports:
    #         - '5672:5672'
    #         - '15672:15672'
    #     labels:
    #         NAME: rabbitmq
    #     volumes:
    #         - ./docker/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins

            - image: rabbitmq:3
              hostname: 'localhost'
              environment:
                RABBITMQ_DEFAULT_USER: rabbitmq
                RABBITMQ_DEFAULT_PASS: rabbitmq
              labels:
                NAME: rabbitmq

        working_directory: ~/repo

        steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                keys:
                - v1-dependencies-{{ checksum "yarn.lock" }}
                # fallback to using the latest cache if no exact match is found
                - v1-dependencies-

            - run: make

            - save_cache:
                paths:
                    - node_modules
                key: v1-dependencies-{{ checksum "yarn.lock" }}

            - run: make migrate

            - run: make verify


    deploy-to-staging:
        docker:
            - image: buildpack-deps:trusty
        working_directory: ~/repo

        steps:
            - checkout
            - add_ssh_keys:
                fingerprints:
                     - "8b:48:5e:67:0e:c9:16:47:32:f2:87:0c:1f:c8:60:ad"
            - run:
                name: Deploy to Heroku Staging Server
                command: |
                    git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_STAGING.git master

workflows:
    version: 2
    standard:
        jobs:
            - build
            - deploy-to-staging:
                requires:
                    - build
